Wyobraźmy sobie że po raz 2778 robimy REST API serwer.
W międzyczasie powstał już prototyp aplikacji frontendowej
    - [screen plain html formularza z jednym polem name i przyciskiem send]
Aplikacja wysyła nam dane z formularza w postacji JSONa i oczekuje odpowiedzi
zwrotnej zawierającej dane utworzonego obiektu.
    - [slajd z jsonem {name} -> {name}]
Zabieramy się do implementacji struktur opisujących nasz interfejs
    - [slajdy z prostymi strukturami]
    - wytłumaczenie tagów
Potem dochodzi pole liczbowe i dodajemy je.
Potem okazuje się że czasami pole liczbowe jest też czasami stringiem (bo wsparcie dla legacy systemu w wersji 5.0)
    - przykłady jsonów, potem json ,string potem json.number
    - wytłumaczenie custom unmarshalerów ale jeszcze bez pointer magii
    - meme car salesman custom un/marshaler
potem pole created at które jest RO
potem pole password które jest RW
potem nagle wchodzi embedded parent struct
potem wchodzi problem
potem wchodzi optymalizacja z pointerem

Poniżej moje pomysły, do dyskusji
Potem zaproponować struktury wyjściowe i wejsciowe jak appka rośnie
potem struct tagi conwersje
A co gdyby jednak wystarczyła nam taka sama struktra i chcielibyśmy tylko zmienić wartość tagów

potem dochodzą dodatkowe ficzery json package

